/*
 * generated by Xtext
 */
package ca.queensu.cs.mase.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IGenerator
import org.eclipse.xtext.generator.IFileSystemAccess
//import ca.queensu.cs.mase.interpreter.Interpreter
class UrmlGenerator implements IGenerator {
	
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
		//TODO implement me
//		println(resource);
		
//		fsa.generateFile(resource.className + ".urml-gen", 
//			puke(resource.contents.head as Model)
//		);
		
//		val x = new Interpreter()
//		x.stuff
//	}
//	
//	def className(Resource res) {
//		var name = res.URI.lastSegment
//		name.substring(0, name.indexOf("."))
//	}
//	
//	def puke(Model model) {
//	'''Model «model.name»
//	«FOR capsule: model.capsules»
//	«capsule.puke»
//
//	«ENDFOR»
//	'''
//	}
//
//def puke(Capsule capsule) {
//'''Capsule «capsule.name»
//	«FOR attrib: capsule.attributes»
//	Attribute «attrib.name»
//	«ENDFOR»
//	«FOR timerPort: capsule.timerPorts»
//	TimerPort «timerPort.name»
//	«ENDFOR»
//	«FOR extPort: capsule.interfacePorts»
//	External Port «extPort.name»
//	«ENDFOR»
//	«FOR capref: capsule.capsuleRefs»
//	CapsuleRef «capref.name»: «capref.type.name»
//	«ENDFOR»
//	«FOR conn: capsule.connectors»
//	Connector «conn.port1.name».«conn.capsuleRef1.name» and «conn.port2.name».«conn.capsuleRef2.name»
//	«ENDFOR»
//	«FOR sm: capsule.statemachines»
//	«sm.puke»
//	«ENDFOR»'''	
//}	
//
//def puke(StateMachine sm) {
//	'''StateMachine
//	«FOR state: sm.states»
//		State «state.name»
//	«ENDFOR»
//	«FOR transition: sm.transitions»
//		Transition «transition.name»
//	«ENDFOR»'''
//}

}}

